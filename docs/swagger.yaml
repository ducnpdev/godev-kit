definitions:
  entity.Translation:
    properties:
      destination:
        example: en
        type: string
      original:
        example: текст для перевода
        type: string
      source:
        example: auto
        type: string
      translation:
        example: text for translation
        type: string
    type: object
  entity.TranslationHistory:
    properties:
      history:
        items:
          $ref: '#/definitions/entity.Translation'
        type: array
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  entity.UserHistory:
    properties:
      users:
        items:
          $ref: '#/definitions/entity.User'
        type: array
    type: object
  request.CreateUser:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
      username:
        example: johndoe
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  request.LoginUser:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  request.Translate:
    properties:
      destination:
        example: en
        type: string
      original:
        example: godev
        type: string
      source:
        example: auto
        type: string
    required:
    - destination
    - original
    - source
    type: object
  request.UpdateUser:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
      username:
        example: johndoe
        minLength: 3
        type: string
    type: object
  response.Error:
    properties:
      error:
        example: message
        type: string
    type: object
  response.LoginResponse:
    properties:
      token:
        type: string
      user:
        properties:
          email:
            type: string
          id:
            type: integer
          username:
            type: string
        type: object
    type: object
  response.Success:
    properties:
      message:
        example: operation completed successfully
        type: string
    type: object
info:
  contact: {}
paths:
  /translation/do-translate:
    post:
      consumes:
      - application/json
      description: Translate a text
      operationId: do-translate
      parameters:
      - description: Set up translation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.Translate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Translation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      summary: Translate
      tags:
      - translation
  /translation/history:
    get:
      consumes:
      - application/json
      description: Show all translation history
      operationId: history
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.TranslationHistory'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      summary: Show history
      tags:
      - translation
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      operationId: login-user
      parameters:
      - description: Login user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      summary: Login user
      tags:
      - auth
  /v1/user:
    get:
      consumes:
      - application/json
      description: Get all users
      operationId: list-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserHistory'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user
      operationId: create-user
      parameters:
      - description: Create user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Create user
      tags:
      - user
  /v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Get user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - user
swagger: "2.0"
